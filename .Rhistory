p_value
# Extracting the actual outcome
actual_outcome <- data$migration[data$region == 7 & data$year > 2014]
# If you're interested in the most recent value after the intervention year:
actual_outcome <- tail(actual_outcome, 1)
# Calculating the p-value
p_value <- sum(placebo$mspe >= actual_outcome) / length(placebo$mspe)
p_value
# Extracting the actual outcome
actual_outcome <- data$migration[data$region == 7 & data$year > 2014]
# If you're interested in the most recent value after the intervention year:
actual_outcome <- tail(actual_outcome, 1)
# Calculating the p-value
p_value <- sum(placebo$mspe >= actual_outcome) / length(placebo$mspe)
p_value
# Extracting the actual outcome
actual_outcome <- data$migration[data$region == 7 & data$year > 2014]
# If you're interested in the most recent value after the intervention year:
actual_outcome <- tail(actual_outcome, 1)
# Calculating the p-value
p_value <- sum(placebo$mspe >= actual_outcome) / length(placebo$mspe)
p_value
# Extracting the actual outcome
# Extracting the actual outcome
actual_outcome <- data$migration[data$region == 7 & data$year > 2014]
# If you're interested in the most recent value after the intervention year:
actual_outcome <- tail(actual_outcome, 1)
# Calculating the p-value
p_value <- sum(placebo$mspe >= actual_outcome) / length(placebo$mspe)
p_value
ratio$p.val[0]
ratio$p.val
#ratio$p.val
```
# Calculate the p-value
ratio <- mspe.test(placebo)
ratio
#ratio$p.val
ratio$test
# Calculate the p-value
ratio <- mspe.test(placebo)
ratio$test
#ratio$p.val
# Extract the MSPE ratio for the treated unit (Poland)
mspe_ratio_poland <- MSPE.ratios$MSPE.ratios[MSPE.ratios$unit == "Poland"]
# Extract the MSPE ratio for the treated unit (Poland)
# Extract the MSPE ratio for Poland
mspe_ratio_poland <- ratio$test[ratio$unit == "Poland"]
# Count the number of placebo units with MSPE ratios greater than or equal to that of Poland
num_greater_or_equal <- sum(ratio$test >= mspe_ratio_poland)
mspe_ratio_poland
# Extract the MSPE ratio for the treated unit (Poland)
# Extract the MSPE ratio for Poland
mspe_ratio_poland <- ratio$test[8]
# Extract the MSPE ratio for the treated unit (Poland)
# Extract the MSPE ratio for Poland
mspe_ratio_poland <- ratio$test[ratio$tes$unit = "Poland"]
# Extract the MSPE ratio for the treated unit (Poland)
# Extract the MSPE ratio for Poland
mspe_ratio_poland <- ratio$test[ratio$tes$unit == "Poland"]
# Extract the MSPE ratio for the treated unit (Poland)
# Extract the MSPE ratio for Poland
mspe_ratio_poland <- ratio$test[ratio$tes$unit == "Poland"]
mspe_ratio_poland
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$test)
print(ratio$p.val)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$test)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$test)
print(ratio$val)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$val)
print(ratio$test)
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=10, xlab='Year')
p
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100, xlab='Year')
p
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
p
mspe_plot(placebo)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$val)
print(ratio$test)
p_value <- sum(placebo$mspe >= actual_outcome) / length(placebo$mspe)
p_value
mspe_plot(placebo)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
# Load required libraries
library(Synth)
# Define the treated unit, donor pool, and treated year
treated_unit <- 7  # Replace with the name/code of Poland in your dataset
# Review and adjust any country_removed variables if necessary
# Create the donor pool while excluding the country to be removed
donor_pool <- unique(data$country[data$region != treated_unit])
# Pretend the intervention happened in 2014 (placebo test)
pretend_treated_year <- 2014
# Review and adjust the selection of covariate variables
covariate_matrix <- data[data$year < pretend_treated_year, c("gdp", "inf", "pop")]
column_datatype <- class(data$region)
dataprep_out <- dataprep(
foo = data,
predictors = c("migration", "gdp", "inf", "pop"),  # Review and adjust the predictors
dependent = "migration",  # Verify that the outcome variable is correctly specified
unit.variable = "region",  # Verify the variable representing countries/regions
time.variable = "year",
treatment.identifier = treated_unit,
controls.identifier = donor_pool,
time.predictors.prior = 2000:2014,  # Adjust the time range for the placebo test
time.optimize.ssr = 2000:2014,  # Adjust the time range for the placebo test
unit.names.variable = "country",
time.plot = 2000:2020,  # Adjust the time range for the placebo test
)
synth_out <- synth(dataprep_out)
print(synth_out)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
gaps.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Effect",
Xlab = "Year",
Main = " Gap between migration flow in Poland and its synthetic version")
gaps <- dataprep_out$Y1plot - (dataprep_out$Y0plot %*% synth_out$solution.w)
donor_weights <- synth_out$solution.w
donor_names <- donor_pool
# Create a data frame with weights, names, and spacing
donor_data <- data.frame(Weights = donor_weights, Country = donor_names)
# Use stargazer to display the data frame
library(stargazer)
stargazer(donor_data, type = "text", summary = FALSE)
synth_tables <- synth.tab(dataprep.res = dataprep_out, synth.res = synth_out)
synth_tables[1:2]
# Names of the generated tables
table_names <- names(synth_tables)
synth.tables$tab.pred
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
p
mspe_plot(placebo)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$val)
print(ratio$test)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$p.val)
print(ratio$test)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$p.val)
print(ratio$test)
library(Synth)
library(LowRankQP)
library(conflicted)
library(dplyr)
library(rvest)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(viridis)
library(hrbrthemes)
library(googlesheets4)
library(skimr)
library(kableExtra)
library(ggthemes)
library(stargazer)
library(kableExtra)
link <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ-8yfjgb7JFa_q4MvpU0vqtE6dnLR2veB8B-XZq-SzVUQKft1Wu05uCMalln9eCjD6Jc4IrRyZPqtn/pub?output=csv"
data <- read.csv(link, header=TRUE)
data
# Load required libraries
library(Synth)
# Define the treated unit, donor pool, and treated year
treated_unit <- 7  # Replace with the name/code of Poland in your dataset
# Review and adjust any country_removed variables if necessary
# Create the donor pool while excluding the country to be removed
donor_pool <- unique(data$country[data$region != treated_unit])
# Pretend the intervention happened in 2014 (placebo test)
pretend_treated_year <- 2014
# Review and adjust the selection of covariate variables
covariate_matrix <- data[data$year < pretend_treated_year, c("gdp", "inf", "pop")]
column_datatype <- class(data$region)
dataprep_out <- dataprep(
foo = data,
predictors = c("migration", "gdp", "inf", "pop"),  # Review and adjust the predictors
dependent = "migration",  # Verify that the outcome variable is correctly specified
unit.variable = "region",  # Verify the variable representing countries/regions
time.variable = "year",
treatment.identifier = treated_unit,
controls.identifier = donor_pool,
time.predictors.prior = 2000:2014,  # Adjust the time range for the placebo test
time.optimize.ssr = 2000:2014,  # Adjust the time range for the placebo test
unit.names.variable = "country",
time.plot = 2000:2020,  # Adjust the time range for the placebo test
)
synth_out <- synth(dataprep_out)
print(synth_out)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
gaps.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Effect",
Xlab = "Year",
Main = " Gap between migration flow in Poland and its synthetic version")
gaps <- dataprep_out$Y1plot - (dataprep_out$Y0plot %*% synth_out$solution.w)
donor_weights <- synth_out$solution.w
donor_names <- donor_pool
# Create a data frame with weights, names, and spacing
donor_data <- data.frame(Weights = donor_weights, Country = donor_names)
# Use stargazer to display the data frame
library(stargazer)
stargazer(donor_data, type = "text", summary = FALSE)
synth_tables <- synth.tab(dataprep.res = dataprep_out, synth.res = synth_out)
synth_tables[1:2]
# Names of the generated tables
table_names <- names(synth_tables)
synth.tables$tab.pred
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
# Install SCtools package from GitHub
remotes::install_github("bcastanho/SCtools")
# Load SCtools package
library(SCtools)
placebo <- generate.placebos(dataprep_out, synth_out, Sigf.ipop = 2, strategy='multicore')
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
conflicted::conflicts_prefer(SCtools::plot_placebos)
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
p
mspe_plot(placebo)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$p.val)
print(ratio$test)
link <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ-8yfjgb7JFa_q4MvpU0vqtE6dnLR2veB8B-XZq-SzVUQKft1Wu05uCMalln9eCjD6Jc4IrRyZPqtn/pub?output=csv"
data <- read.csv(link, header=TRUE)
data
# Load required libraries
library(Synth)
# Define the treated unit, donor pool, and treated year
treated_unit <- 7  # Replace with the name/code of Poland in your dataset
# Review and adjust any country_removed variables if necessary
# Create the donor pool while excluding the country to be removed
donor_pool <- unique(data$country[data$region != treated_unit])
# Pretend the intervention happened in 2014 (placebo test)
pretend_treated_year <- 2014
# Review and adjust the selection of covariate variables
covariate_matrix <- data[data$year < pretend_treated_year, c("gdp", "inf", "pop", "unemp")]
column_datatype <- class(data$region)
dataprep_out <- dataprep(
foo = data,
predictors = c("migration", "gdp", "inf", "pop"),  # Review and adjust the predictors
dependent = "migration",  # Verify that the outcome variable is correctly specified
unit.variable = "region",  # Verify the variable representing countries/regions
time.variable = "year",
treatment.identifier = treated_unit,
controls.identifier = donor_pool,
time.predictors.prior = 2000:2014,  # Adjust the time range for the placebo test
time.optimize.ssr = 2000:2014,  # Adjust the time range for the placebo test
unit.names.variable = "country",
time.plot = 2000:2020,  # Adjust the time range for the placebo test
)
synth_out <- synth(dataprep_out)
print(synth_out)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
gaps.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Effect",
Xlab = "Year",
Main = " Gap between migration flow in Poland and its synthetic version")
gaps <- dataprep_out$Y1plot - (dataprep_out$Y0plot %*% synth_out$solution.w)
donor_weights <- synth_out$solution.w
donor_names <- donor_pool
# Create a data frame with weights, names, and spacing
donor_data <- data.frame(Weights = donor_weights, Country = donor_names)
# Use stargazer to display the data frame
library(stargazer)
stargazer(donor_data, type = "text", summary = FALSE)
synth_tables <- synth.tab(dataprep.res = dataprep_out, synth.res = synth_out)
synth_tables[1:2]
# Names of the generated tables
table_names <- names(synth_tables)
synth.tables$tab.pred
library(SCtools)
placebo <- generate.placebos(dataprep_out, synth_out, Sigf.ipop = 2, strategy='multicore')
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
p
mspe_plot(placebo)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$p.val)
print(ratio$test)
link <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ-8yfjgb7JFa_q4MvpU0vqtE6dnLR2veB8B-XZq-SzVUQKft1Wu05uCMalln9eCjD6Jc4IrRyZPqtn/pub?output=csv"
data <- read.csv(link, header=TRUE)
data
# Load required libraries
library(Synth)
# Define the treated unit, donor pool, and treated year
treated_unit <- 7  # Replace with the name/code of Poland in your dataset
# Review and adjust any country_removed variables if necessary
# Create the donor pool while excluding the country to be removed
donor_pool <- unique(data$country[data$region != treated_unit])
# Pretend the intervention happened in 2014 (placebo test)
pretend_treated_year <- 2014
# Review and adjust the selection of covariate variables
covariate_matrix <- data[data$year < pretend_treated_year, c("gdp", "inf", "pop", "unemp")]
column_datatype <- class(data$region)
dataprep_out <- dataprep(
foo = data,
predictors = c("migration", "gdp", "inf", "pop"),  # Review and adjust the predictors
dependent = "migration",  # Verify that the outcome variable is correctly specified
unit.variable = "region",  # Verify the variable representing countries/regions
time.variable = "year",
treatment.identifier = treated_unit,
controls.identifier = donor_pool,
time.predictors.prior = 2000:2014,  # Adjust the time range for the placebo test
time.optimize.ssr = 2000:2014,  # Adjust the time range for the placebo test
unit.names.variable = "country",
time.plot = 2000:2020,  # Adjust the time range for the placebo test
)
synth_out <- synth(dataprep_out)
print(synth_out)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
gaps.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Effect",
Xlab = "Year",
Main = " Gap between migration flow in Poland and its synthetic version")
gaps <- dataprep_out$Y1plot - (dataprep_out$Y0plot %*% synth_out$solution.w)
donor_weights <- synth_out$solution.w
donor_names <- donor_pool
# Create a data frame with weights, names, and spacing
donor_data <- data.frame(Weights = donor_weights, Country = donor_names)
# Use stargazer to display the data frame
library(stargazer)
stargazer(donor_data, type = "text", summary = FALSE)
link <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ-8yfjgb7JFa_q4MvpU0vqtE6dnLR2veB8B-XZq-SzVUQKft1Wu05uCMalln9eCjD6Jc4IrRyZPqtn/pub?output=csv"
data <- read.csv(link, header=TRUE)
data
# Load required libraries
library(Synth)
# Define the treated unit, donor pool, and treated year
treated_unit <- 7  # Replace with the name/code of Poland in your dataset
# Review and adjust any country_removed variables if necessary
# Create the donor pool while excluding the country to be removed
donor_pool <- unique(data$country[data$region != treated_unit])
# Pretend the intervention happened in 2014 (placebo test)
pretend_treated_year <- 2014
# Review and adjust the selection of covariate variables
covariate_matrix <- data[data$year < pretend_treated_year, c("gdp", "inf", "pop", "unemp")]
column_datatype <- class(data$region)
dataprep_out <- dataprep(
foo = data,
predictors = c("migration", "gdp", "inf", "pop"),  # Review and adjust the predictors
dependent = "migration",  # Verify that the outcome variable is correctly specified
unit.variable = "region",  # Verify the variable representing countries/regions
time.variable = "year",
treatment.identifier = treated_unit,
controls.identifier = donor_pool,
time.predictors.prior = 2000:2014,  # Adjust the time range for the placebo test
time.optimize.ssr = 2000:2014,  # Adjust the time range for the placebo test
unit.names.variable = "country",
time.plot = 2000:2020,  # Adjust the time range for the placebo test
)
synth_out <- synth(dataprep_out)
print(synth_out)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
gaps.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2014,
Ylab = "Effect",
Xlab = "Year",
Main = " Gap between migration flow in Poland and its synthetic version")
gaps <- dataprep_out$Y1plot - (dataprep_out$Y0plot %*% synth_out$solution.w)
donor_weights <- synth_out$solution.w
donor_names <- donor_pool
# Create a data frame with weights, names, and spacing
donor_data <- data.frame(Weights = donor_weights, Country = donor_names)
# Use stargazer to display the data frame
library(stargazer)
stargazer(donor_data, type = "text", summary = FALSE)
synth_tables <- synth.tab(dataprep.res = dataprep_out, synth.res = synth_out)
synth_tables[1:2]
# Names of the generated tables
table_names <- names(synth_tables)
synth.tables$tab.pred
placebo <- generate.placebos(dataprep_out, synth_out, Sigf.ipop = 2, strategy='multicore')
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100000, xlab='Year')
p
mspe_plot(placebo)
# Calculate the p-value
ratio <- mspe.test(placebo)
print(ratio$p.val)
print(ratio$test)
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100, xlab='Year')
p <- plot_placebos(placebo,discard.extreme=TRUE, mspe.limit=100, xlab='Year')
p
link <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ-8yfjgb7JFa_q4MvpU0vqtE6dnLR2veB8B-XZq-SzVUQKft1Wu05uCMalln9eCjD6Jc4IrRyZPqtn/pub?output=csv"
data <- read.csv(link, header=TRUE)
data
# Load required libraries
library(Synth)
# Your data (replace 'd' with your actual data frame)
# Define the treated unit, donor pool, and treated year
treated_unit <- 7  # Replace with the name/code of Poland in your dataset
# Review and adjust any country_removed variables if necessary
# Create the donor pool while excluding the country to be removed
donor_pool <- unique(data$country[data$region != treated_unit])
# Pretend the intervention happened in 2008 (placebo test)
pretend_treated_year <- 2008
# Review and adjust the selection of covariate variables
covariate_matrix <- data[data$year < pretend_treated_year, c("gdp", "inf", "pop", "unemp")]
column_datatype <- class(data$region)
dataprep_out <- dataprep(
foo = data,
predictors = c("migration", "gdp", "inf", "pop"),  # Review and adjust the predictors
dependent = "migration",  # Verify that the outcome variable is correctly specified
unit.variable = "region",  # Verify the variable representing countries/regions
time.variable = "year",
treatment.identifier = treated_unit,
controls.identifier = donor_pool,
time.predictors.prior = 2000:2008,  # Adjust the time range for the placebo test
time.optimize.ssr = 2000:2008,  # Adjust the time range for the placebo test
unit.names.variable = "country",
time.plot = 2000:2020,  # Adjust the time range for the placebo test
)
synth_out <- synth(dataprep_out)
print(synth_out)
path.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2008,
Ylab = "Migration",
Xlab = "Year",
Legend = c("Poland", "Synthetic Poland"),
Main = "Poland vs Synthetic Poland" ,
Ylim = c(0,500000)
)
gaps.plot(synth.res = synth_out,
dataprep.res = dataprep_out,
tr.intake = 2008,
Ylab = "Effect",
Xlab = "Year",
Main = " Gap between migration flow in Poland and its synthetic version")
gaps <- dataprep_out$Y1plot - (dataprep_out$Y0plot %*% synth_out$solution.w)
donor_weights <- synth_out$solution.w
donor_names <- donor_pool
# Create a data frame with weights, names, and spacing
donor_data <- data.frame(Weights = donor_weights, Country = donor_names)
# Use stargazer to display the data frame
library(stargazer)
stargazer(donor_data, type = "text", summary = FALSE)
synth_tables <- synth.tab(dataprep.res = dataprep_out, synth.res = synth_out)
synth_tables[1:2]
# Names of the generated tables
table_names <- names(synth_tables)
synth.tables$tab.pred
